{"version":3,"sources":["stats.js","script.js"],"names":["heroStats","name","health","attack","defend","stamina","speed","monsterStats","Entity","damage","Fight","player1","player2","turn","fighters","sides","Math","floor","random","quantity","total","i","singleRoll","attacker","defender","attackScore","defendScore","takeDamage","console","log","currentOrder","reverse","gatherStats","sample","blowsLanded","blowsBlocked","result","battle","takeTurn","hero","monster","window"],"mappings":"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","file":"script.75da7f30.map","sourceRoot":"..","sourcesContent":["const heroStats = {\n  name: \"hero\",\n  health: 3,\n  attack: 5,\n  defend: 3,\n  stamina: 3,\n  speed: 5\n};\n\nconst monsterStats = {\n  name: \"monster\",\n  health: 3,\n  attack: 3,\n  defend: 4,\n  stamina: 3,\n  speed: 4\n};\n\nexport { heroStats };","import { heroStats } from \"./stats.js\";\n\nclass Entity {\n  constructor({ name, health, attack, defend, stamina, speed }) {\n    this.name = name;\n    this.health = health;\n    this.attack = attack;\n    this.defend = defend;\n    this.stamina = stamina;\n    this.speed = speed;\n  }\n  takeDamage(damage) {\n    this.health -= damage;\n  }\n}\n\nclass Fight {\n  constructor(player1, player2) {\n    this.turn = 0;\n    this.fighters = [player1, player2];\n  }\n  singleRoll(sides) {\n    return Math.floor(Math.random() * sides) + 1;\n  }\n  rollDice(sides, quantity) {\n    let total = 0;\n    for (let i = 0; i < quantity; i++) {\n      total += this.singleRoll(sides)\n    };\n    return total;\n  }\n  takeTurn(attacker, defender) {\n    const attackScore = this.singleRoll(6) + attacker.attack;\n    const defendScore = this.singleRoll(6) + defender.defend;\n    if (attackScore > defendScore) {\n      defender.takeDamage(1);\n      console.log(`defender takes damage...${defender.health}HP remaining`);\n    };\n\n    console.log(`ATT: ${attackScore} DEF: ${defendScore}`);\n  }\n  nextFighter() {\n    const currentOrder = this.fighters;\n    currentOrder.reverse();\n    this.fighters = currentOrder;\n    console.log(this.fighters);\n  }\n  commence() {\n    let [attacker, defender] = this.fighters;\n    console.log(`\n      ${attacker.name}(${attacker.speed}), \n      ${defender.name}(${defender.speed})\n      `);\n\n    if (attacker.speed > defender.speed) {\n      console.log(`${attacker.name}'s initiative!`);\n    }\n    else if (defender.speed > attacker.speed) {\n      console.log(`${defender.name}'s initiative!`); \n    }\n    else console.log(\"no attacker initiative bonus\");\n  }\n}\n\nfunction gatherStats(sample) {\n  blowsLanded = 0;\n  blowsBlocked = 0;\n  for (let i = 0; i < sample; i++) {\n    const result = battle.takeTurn(hero, monster);\n    switch (result) {\n      case result[0] > result[1]:\n      blowsLanded++;\n      break;\n      case result[1] > result[0]:\n      blowsBlocked++;\n      break;\n      default:\n      null;\n    }\n  };\n  console.log(`hero: ${blowsLanded} monster: ${blowsBlocked}`);\n}\n\nconst monsterStats = {\n  name: \"monster\",\n  health: 3,\n  attack: 3,\n  defend: 4,\n  stamina: 3,\n  speed: 4\n};\n\nconst hero = new Entity(heroStats);\nconst monster = new Entity(monsterStats);\nconst battle = new Fight(hero, monster);\n\nconsole.log(hero);\n\nwindow.battle = battle;\nwindow.hero = hero;\n"]}